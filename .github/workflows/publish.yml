name: Publish

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  parse_release_name:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Parse Release Name
        id: parse-release-name
        uses: ./.github/actions/parse_release_name
        with:
          #release-name: ${{ github.ref }}
          release-name: v1.3.0
    outputs:
      release-version: ${{ steps.parse-release-name.outputs.release-version}}
      release-tag: ${{ steps.parse-release-name.outputs.release-tag}}

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    needs:
      - parse_release_name
    env:
      RELEASE_VERSION: ${{ needs.parse_release_name.outputs.release-version }}
      RELEASE_TAG: ${{ needs.parse_release_name.outputs.release-tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org'

      - name: Update package version
        run: |
          release_version=${{ env.RELEASE_VERSION }}
          jq --arg version "$release_version" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
          cat package.json

      - name: Install dependencies
        run: npm ci

      - name: Publish
        if: ${{ env.RELEASE_TAG == null }}
        run: echo RELEASE_TAG > ${{ env.RELEASE_TAG }}
        #run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish (${{ env.RELEASE_TAG }})
        if: ${{ env.RELEASE_TAG != null }}
        run: echo RELEASE_TAG > ${{ env.RELEASE_TAG }}
        #run: npm publish --provenance --access public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
